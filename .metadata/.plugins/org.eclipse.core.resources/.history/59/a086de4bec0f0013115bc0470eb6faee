package kroki.app.generators.django;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;

import freemarker.cache.FileTemplateLoader;
import freemarker.template.Configuration;
import freemarker.template.DefaultObjectWrapper;

public class DirectoryTreeGenerator {
	
	public void generateDirectories(String filePath,String projectName){
		
		String projectRoot=filePath+File.separator+projectName;
		String krokiRoot=new File("").getAbsolutePath();
		
		//create container for project, same name as project
		boolean success=(new File(projectRoot).mkdir());
		
		if(success){
			
			//create file manage.py
			Configuration cfg = new Configuration();
			cfg.setObjectWrapper(new DefaultObjectWrapper());
			FileTemplateLoader templateLoader;
			try {
				templateLoader = new FileTemplateLoader(new File(krokiRoot + "src/kroki/app/generators/templates/django"));
			} catch (IOException e) {
				e.printStackTrace();
			}
			
			/*String krokiRoot=new File("").getAbsolutePath();
			
			File templatesPath_source=new File(krokiRoot+File.separator+"src"+File.separator+"kroki\\app\\generators\\templates\\django\\manage.py");
			File projectPath_dest=new File(projectRoot+File.separator+"manage.py");*/
			
			//create project folder
			success=(new File(projectRoot+File.separator+projectName).mkdir());
		}
	}
	
	/*private void copyFile(File sourceFile, File destinationFile){
		
		if(!destinationFile.exists()){
			try {
				destinationFile.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		FileChannel source=null;
		FileChannel destination=null;
		
		try {
			source = new FileInputStream(sourceFile).getChannel();
			destination = new FileOutputStream(destinationFile).getChannel();
			destination.transferFrom(source, 0, source.size());
			
			if(source!=null)
				source.close();
			
			if(destination!=null)
				destination.close();
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}*/

}
